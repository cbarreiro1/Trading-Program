//Test For API With Chat GTP

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.concurrent.TimeUnit;

import com.alpaca.markets.*;
import com.alpaca.markets.models.*;

public class TradingBot {
    private static final String ALPACA_API_KEY = "your-api-key";
    private static final String ALPACA_SECRET_KEY = "your-secret-key";
    private static final String ALPACA_PAPER_API_ENDPOINT = "https://paper-api.alpaca.markets";

    private static final String STOCK_SYMBOL = "AAPL";
    private static final int SHARES_TO_BUY = 1;
    private static final double STOP_LOSS_PERCENTAGE = 0.01;

    private static AlpacaAPI alpacaAPI;

    public static void main(String[] args) throws InterruptedException {
        alpacaAPI = new AlpacaAPI(ALPACA_API_KEY, ALPACA_SECRET_KEY, ALPACA_PAPER_API_ENDPOINT);

        // Wait for the market to open
        while (!isMarketOpen()) {
            System.out.println("Waiting for the market to open...");
            TimeUnit.MINUTES.sleep(1);
        }

        System.out.println("Market is open, starting trading...");

        // Set initial stop loss price
        double stopLossPrice = 0.0;

        // Keep track of whether we have an open position or not
        boolean hasPosition = false;

        // Start trading for 1 hour
        LocalDateTime startTime = LocalDateTime.now();
        LocalDateTime endTime = startTime.plusHours(1);
        while (LocalDateTime.now().isBefore(endTime)) {
            try {
                // Get the latest price information for the stock
                BarSet barSet = alpacaAPI.getBarSet(new BarSetRequestBuilder()
                    .symbols(STOCK_SYMBOL)
                    .timeframe(TimeFrame.ONE_MINUTE)
                    .limit(1)
                    .build());

                Bar bar = barSet.get(STOCK_SYMBOL).get(0);

                // Check if the stock price crossed the 9 EMA
                double ema9 = calculateEMA(9);
                double stockPrice = bar.getClosePrice().doubleValue();
                if (stockPrice > ema9 && stopLossPrice == 0.0) {
                    // Buy one share of the stock
                    alpacaAPI.placeOrder(new OrderRequestBuilder()
                        .symbol(STOCK_SYMBOL)
                        .quantity(SHARES_TO_BUY)
                        .side(OrderSide.BUY)
                        .type(OrderType.MARKET)
                        .timeInForce(TimeInForce.DAY)
                        .build());

                    // Set the stop loss price at 1 dollar below the buying price
                    stopLossPrice = stockPrice - 1.0;

                    System.out.println("Bought " + SHARES_TO_BUY + " share(s) of " + STOCK_SYMBOL + " at $" + stockPrice);
                    hasPosition = true;
                } else if (stockPrice < stopLossPrice && hasPosition) {
                    // Sell all shares of the stock due to stop loss
                    alpacaAPI.placeOrder(new OrderRequestBuilder()
                        .symbol(STOCK_SYMBOL)
                        .quantity(SHARES_TO_BUY)
                        .side(OrderSide.SELL)
                        .type(OrderType.MARKET)
                        .timeInForce(TimeInForce.DAY)
                        .build());

                    System.out.println("Sold " + SHARES_TO_BUY + " share(s) of " + STOCK_SYMBOL + " at $" + stockPrice + " due to stop loss");
                    hasPosition = false;
                    stopLossPrice = 0.0;
                }



